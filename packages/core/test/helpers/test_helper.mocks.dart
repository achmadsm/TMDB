// Mocks generated by Mockito 5.4.2 from annotations
// in core/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i11;
import 'dart:ui' as _i12;

import 'package:core/utils/state_enum.dart' as _i10;
import 'package:mockito/mockito.dart' as _i1;
import 'package:movie/domain/entities/movie.dart' as _i9;
import 'package:movie/domain/usecases/get_now_playing_movies.dart' as _i2;
import 'package:movie/domain/usecases/get_popular_movies.dart' as _i3;
import 'package:movie/domain/usecases/get_top_rated_movies.dart' as _i4;
import 'package:movie/presentation/provider/movie_list_notifier.dart' as _i8;
import 'package:tv/domain/entities/tv.dart' as _i14;
import 'package:tv/domain/usecases/get_on_the_air_tv_shows.dart' as _i5;
import 'package:tv/domain/usecases/get_popular_tv_shows.dart' as _i6;
import 'package:tv/domain/usecases/get_top_rated_tv_shows.dart' as _i7;
import 'package:tv/presentation/provider/tv_list_notifier.dart' as _i13;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGetNowPlayingMovies_0 extends _i1.SmartFake
    implements _i2.GetNowPlayingMovies {
  _FakeGetNowPlayingMovies_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetPopularMovies_1 extends _i1.SmartFake
    implements _i3.GetPopularMovies {
  _FakeGetPopularMovies_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetTopRatedMovies_2 extends _i1.SmartFake
    implements _i4.GetTopRatedMovies {
  _FakeGetTopRatedMovies_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetOnTheAirTvShows_3 extends _i1.SmartFake
    implements _i5.GetOnTheAirTvShows {
  _FakeGetOnTheAirTvShows_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetPopularTvShows_4 extends _i1.SmartFake
    implements _i6.GetPopularTvShows {
  _FakeGetPopularTvShows_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetTopRatedTvShows_5 extends _i1.SmartFake
    implements _i7.GetTopRatedTvShows {
  _FakeGetTopRatedTvShows_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MovieListNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieListNotifier extends _i1.Mock implements _i8.MovieListNotifier {
  MockMovieListNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetNowPlayingMovies get getNowPlayingMovies => (super.noSuchMethod(
        Invocation.getter(#getNowPlayingMovies),
        returnValue: _FakeGetNowPlayingMovies_0(
          this,
          Invocation.getter(#getNowPlayingMovies),
        ),
      ) as _i2.GetNowPlayingMovies);

  @override
  _i3.GetPopularMovies get getPopularMovies => (super.noSuchMethod(
        Invocation.getter(#getPopularMovies),
        returnValue: _FakeGetPopularMovies_1(
          this,
          Invocation.getter(#getPopularMovies),
        ),
      ) as _i3.GetPopularMovies);

  @override
  _i4.GetTopRatedMovies get getTopRatedMovies => (super.noSuchMethod(
        Invocation.getter(#getTopRatedMovies),
        returnValue: _FakeGetTopRatedMovies_2(
          this,
          Invocation.getter(#getTopRatedMovies),
        ),
      ) as _i4.GetTopRatedMovies);

  @override
  List<_i9.Movie> get nowPlayingMovies => (super.noSuchMethod(
        Invocation.getter(#nowPlayingMovies),
        returnValue: <_i9.Movie>[],
      ) as List<_i9.Movie>);

  @override
  List<_i9.Movie> get popularMovies => (super.noSuchMethod(
        Invocation.getter(#popularMovies),
        returnValue: <_i9.Movie>[],
      ) as List<_i9.Movie>);

  @override
  List<_i9.Movie> get topRatedMovies => (super.noSuchMethod(
        Invocation.getter(#topRatedMovies),
        returnValue: <_i9.Movie>[],
      ) as List<_i9.Movie>);

  @override
  _i10.RequestState get nowPlayingState => (super.noSuchMethod(
        Invocation.getter(#nowPlayingState),
        returnValue: _i10.RequestState.empty,
      ) as _i10.RequestState);

  @override
  _i10.RequestState get popularMoviesState => (super.noSuchMethod(
        Invocation.getter(#popularMoviesState),
        returnValue: _i10.RequestState.empty,
      ) as _i10.RequestState);

  @override
  _i10.RequestState get topRatedMoviesState => (super.noSuchMethod(
        Invocation.getter(#topRatedMoviesState),
        returnValue: _i10.RequestState.empty,
      ) as _i10.RequestState);

  @override
  String get message => (super.noSuchMethod(
        Invocation.getter(#message),
        returnValue: '',
      ) as String);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i11.Future<void> fetchNowPlayingMovies() => (super.noSuchMethod(
        Invocation.method(
          #fetchNowPlayingMovies,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> fetchPopularMovies() => (super.noSuchMethod(
        Invocation.method(
          #fetchPopularMovies,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> fetchTopRatedMovies() => (super.noSuchMethod(
        Invocation.method(
          #fetchTopRatedMovies,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  void addListener(_i12.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i12.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [TvListNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvListNotifier extends _i1.Mock implements _i13.TvListNotifier {
  MockTvListNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.GetOnTheAirTvShows get getOnTheAirTvShows => (super.noSuchMethod(
        Invocation.getter(#getOnTheAirTvShows),
        returnValue: _FakeGetOnTheAirTvShows_3(
          this,
          Invocation.getter(#getOnTheAirTvShows),
        ),
      ) as _i5.GetOnTheAirTvShows);

  @override
  _i6.GetPopularTvShows get getPopularTvShows => (super.noSuchMethod(
        Invocation.getter(#getPopularTvShows),
        returnValue: _FakeGetPopularTvShows_4(
          this,
          Invocation.getter(#getPopularTvShows),
        ),
      ) as _i6.GetPopularTvShows);

  @override
  _i7.GetTopRatedTvShows get getTopRatedTvShows => (super.noSuchMethod(
        Invocation.getter(#getTopRatedTvShows),
        returnValue: _FakeGetTopRatedTvShows_5(
          this,
          Invocation.getter(#getTopRatedTvShows),
        ),
      ) as _i7.GetTopRatedTvShows);

  @override
  List<_i14.Tv> get onTheAirTvShows => (super.noSuchMethod(
        Invocation.getter(#onTheAirTvShows),
        returnValue: <_i14.Tv>[],
      ) as List<_i14.Tv>);

  @override
  List<_i14.Tv> get popularTvShows => (super.noSuchMethod(
        Invocation.getter(#popularTvShows),
        returnValue: <_i14.Tv>[],
      ) as List<_i14.Tv>);

  @override
  List<_i14.Tv> get topRatedTvShows => (super.noSuchMethod(
        Invocation.getter(#topRatedTvShows),
        returnValue: <_i14.Tv>[],
      ) as List<_i14.Tv>);

  @override
  _i10.RequestState get onTheAirState => (super.noSuchMethod(
        Invocation.getter(#onTheAirState),
        returnValue: _i10.RequestState.empty,
      ) as _i10.RequestState);

  @override
  _i10.RequestState get popularTvShowsState => (super.noSuchMethod(
        Invocation.getter(#popularTvShowsState),
        returnValue: _i10.RequestState.empty,
      ) as _i10.RequestState);

  @override
  _i10.RequestState get topRatedTvShowsState => (super.noSuchMethod(
        Invocation.getter(#topRatedTvShowsState),
        returnValue: _i10.RequestState.empty,
      ) as _i10.RequestState);

  @override
  String get message => (super.noSuchMethod(
        Invocation.getter(#message),
        returnValue: '',
      ) as String);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i11.Future<void> fetchOnTheAirTvShows() => (super.noSuchMethod(
        Invocation.method(
          #fetchOnTheAirTvShows,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> fetchPopularTvShows() => (super.noSuchMethod(
        Invocation.method(
          #fetchPopularTvShows,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> fetchTopRatedTvShows() => (super.noSuchMethod(
        Invocation.method(
          #fetchTopRatedTvShows,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  void addListener(_i12.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i12.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
